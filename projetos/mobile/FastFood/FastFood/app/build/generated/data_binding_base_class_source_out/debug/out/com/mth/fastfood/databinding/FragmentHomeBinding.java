// Generated by view binder compiler. Do not edit!
package com.mth.fastfood.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.mth.fastfood.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout categoryHambuger1;

  @NonNull
  public final LinearLayout categoryHambuger2;

  @NonNull
  public final LinearLayout categoryPizza;

  @NonNull
  public final LinearLayout categoryRefri;

  @NonNull
  public final LinearLayout categoryVariados;

  @NonNull
  public final NestedScrollView nestedScrollView;

  private FragmentHomeBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout categoryHambuger1, @NonNull LinearLayout categoryHambuger2,
      @NonNull LinearLayout categoryPizza, @NonNull LinearLayout categoryRefri,
      @NonNull LinearLayout categoryVariados, @NonNull NestedScrollView nestedScrollView) {
    this.rootView = rootView;
    this.categoryHambuger1 = categoryHambuger1;
    this.categoryHambuger2 = categoryHambuger2;
    this.categoryPizza = categoryPizza;
    this.categoryRefri = categoryRefri;
    this.categoryVariados = categoryVariados;
    this.nestedScrollView = nestedScrollView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.category_hambuger_1;
      LinearLayout categoryHambuger1 = ViewBindings.findChildViewById(rootView, id);
      if (categoryHambuger1 == null) {
        break missingId;
      }

      id = R.id.category_hambuger_2;
      LinearLayout categoryHambuger2 = ViewBindings.findChildViewById(rootView, id);
      if (categoryHambuger2 == null) {
        break missingId;
      }

      id = R.id.category_pizza;
      LinearLayout categoryPizza = ViewBindings.findChildViewById(rootView, id);
      if (categoryPizza == null) {
        break missingId;
      }

      id = R.id.category_refri;
      LinearLayout categoryRefri = ViewBindings.findChildViewById(rootView, id);
      if (categoryRefri == null) {
        break missingId;
      }

      id = R.id.category_variados;
      LinearLayout categoryVariados = ViewBindings.findChildViewById(rootView, id);
      if (categoryVariados == null) {
        break missingId;
      }

      id = R.id.nested_scroll_view;
      NestedScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      return new FragmentHomeBinding((ConstraintLayout) rootView, categoryHambuger1,
          categoryHambuger2, categoryPizza, categoryRefri, categoryVariados, nestedScrollView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
